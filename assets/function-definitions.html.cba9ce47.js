import{_ as e,l,o as p,a as o,b as s,q as r,F as t,z as n,y as D}from"./app.f561f6dd.js";const c={},i=s("h1",{id:"function-definitions",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#function-definitions","aria-hidden":"true"},"#"),n(" Function Definitions")],-1),y=n("See NineAnimatorCommon "),d={href:"https://github.com/SuperMarcus/NineAnimatorCommon/blob/master/Sources/NineAnimatorCommon/Models/AnimeSource/Source.swift",target:"_blank",rel:"noopener noreferrer"},C=s("code",null,"AnimeSource/Source.swift",-1),u=n(" function definitions for implementation."),m=D(`<h2 id="featured" tabindex="-1"><a class="header-anchor" href="#featured" aria-hidden="true">#</a> <code>featured</code></h2><h3 id="method-signature" tabindex="-1"><a class="header-anchor" href="#method-signature" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">featured</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">_</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">handler</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">@escaping</span><span style="color:#D4D4D4;"> NineAnimatorCallback&lt;FeaturedContainer&gt;) -&gt; NineAnimatorAsyncTask?</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>handler</code></td><td>NineAnimatorCallback&lt;FeaturedContainer&gt;</td><td>An optional parameter</td></tr></tbody></table><h3 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h3><p>The featured function return a <code>NineAnimatorAsyncTask</code>. In a source implementation, the function should return <a href="/contribution/source-development/function-reference#featuredcontainer"><code>NineAnimatorPromise&lt;FeaturedContainer&gt;</code></a>.</p><h3 id="example-implementation" tabindex="-1"><a class="header-anchor" href="#example-implementation" aria-hidden="true">#</a> Example Implementation</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">featured</span><span style="color:#D4D4D4;">() -&gt; NineAnimatorPromise&lt;FeaturedContainer&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">requestManager</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">request</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;/&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">handling</span><span style="color:#D4D4D4;">: .</span><span style="color:#9CDCFE;">browsing</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#9CDCFE;">responseString</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#9CDCFE;">then</span><span style="color:#D4D4D4;"> { content -&gt; FeaturedContainer </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">            Log.</span><span style="color:#DCDCAA;">info</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;[NASourceGogoAnime] Loading FeaturedContainer&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">              </span><span style="color:#6A9955;">// Parse html contents</span></span>
<span class="line"><span style="color:#D4D4D4;">              </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> bowl = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> SwiftSoup.</span><span style="color:#DCDCAA;">parse</span><span style="color:#D4D4D4;">(content)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// Links for updated anime</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> updatedAnimeContainer = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.new-latest&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> latestAnime = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> updatedAnimeContainer.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.nl-item&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">                element -&gt; AnimeLink </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> urlString = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> element.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;a.nli-image&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;href&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> url = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">URL</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">: urlString).</span><span style="color:#DCDCAA;">tryUnwrap</span><span style="color:#D4D4D4;">(.</span><span style="color:#9CDCFE;">urlError</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> artwork = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> element.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;img&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;src&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> artworkUrl = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">URL</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">: artwork).</span><span style="color:#DCDCAA;">tryUnwrap</span><span style="color:#D4D4D4;">(.</span><span style="color:#9CDCFE;">urlError</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> title = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> element.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;nli-serie&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">AnimeLink</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">title</span><span style="color:#D4D4D4;">: title, </span><span style="color:#DCDCAA;">link</span><span style="color:#D4D4D4;">: url, </span><span style="color:#DCDCAA;">image</span><span style="color:#D4D4D4;">: artworkUrl, </span><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// Links for popular anime</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> popularAnimeContainer = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.ci-contents .bl-box&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">                element -&gt; AnimeLink </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> linkElement = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> element.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;a.blb-title&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> title = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> linkElement.</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> urlString = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> linkElement.</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;href&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> url = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">URL</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">: urlString).</span><span style="color:#DCDCAA;">tryUnwrap</span><span style="color:#D4D4D4;">(.</span><span style="color:#9CDCFE;">urlError</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> artwork = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> element.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.blb-image&gt;img&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;src&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> artworkUrl = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">URL</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">: artwork).</span><span style="color:#DCDCAA;">tryUnwrap</span><span style="color:#D4D4D4;">(.</span><span style="color:#9CDCFE;">urlError</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">AnimeLink</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">title</span><span style="color:#D4D4D4;">: title, </span><span style="color:#DCDCAA;">link</span><span style="color:#D4D4D4;">: url, </span><span style="color:#DCDCAA;">image</span><span style="color:#D4D4D4;">: artworkUrl, </span><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// Construct a basic featured anime container</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">BasicFeaturedContainer</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">featured</span><span style="color:#D4D4D4;">: popularAnimeContainer,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">latest</span><span style="color:#D4D4D4;">: latestAnime</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="anime" tabindex="-1"><a class="header-anchor" href="#anime" aria-hidden="true">#</a> <code>anime</code></h2><h3 id="method-signature-1" tabindex="-1"><a class="header-anchor" href="#method-signature-1" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">anime</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">link</span><span style="color:#D4D4D4;">: AnimeLink, </span><span style="color:#DCDCAA;">_</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">handler</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">@escaping</span><span style="color:#D4D4D4;"> NineAnimatorCallback&lt;Anime&gt;) -&gt; NineAnimatorAsyncTask?</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>link</code></td><td>AnimeLink</td><td>The <code>AnimeLink</code> object struct for all possible links</td></tr><tr><td><code>handler</code></td><td>NineAnimatorCallback&lt;Anime&gt;</td><td>NineAnimatorCallback for Anime</td></tr></tbody></table><h3 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h3><p>The anime function return a <code>NineAnimatorAsyncTask</code>. In a source implementation, the function should return <a href="/contribution/source-development/function-reference#anime"><code>NineAnimatorPromise&lt;Anime&gt;</code></a>.</p><h3 id="example-implementation-1" tabindex="-1"><a class="header-anchor" href="#example-implementation-1" aria-hidden="true">#</a> Example Implementation</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">anime</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">link</span><span style="color:#D4D4D4;">: AnimeLink) -&gt; NineAnimatorPromise&lt;Anime&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">requestManager</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">request</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">: link.</span><span style="color:#9CDCFE;">link</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">handling</span><span style="color:#D4D4D4;">: .</span><span style="color:#9CDCFE;">browsing</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#9CDCFE;">responseString</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#9CDCFE;">then</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            responseContent -&gt; Anime </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> bowl = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> SwiftSoup.</span><span style="color:#DCDCAA;">parse</span><span style="color:#D4D4D4;">(responseContent)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> animeTitle = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;div.container.anime-title-as.mb-3.w-100 b&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> animeArtworkUrl = </span><span style="color:#DCDCAA;">URL</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">: </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.cover&gt;img&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;src&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                ) ?? link.</span><span style="color:#9CDCFE;">image</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> reconstructedAnimeLink = </span><span style="color:#DCDCAA;">AnimeLink</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">title</span><span style="color:#D4D4D4;">: animeTitle,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">link</span><span style="color:#D4D4D4;">: link.</span><span style="color:#9CDCFE;">link</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">image</span><span style="color:#D4D4D4;">: animeArtworkUrl,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">self</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// Obtain the list of episodes</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> episodes = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;div.tab-content div div.episodes-button&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">reduce</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">into</span><span style="color:#D4D4D4;">: [EpisodeLink]()) {</span></span>
<span class="line"><span style="color:#D4D4D4;">                collection, container </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> name =  </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> container.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;a&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">components</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">separatedBy</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot; &quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> episodeName = name[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> episodeLink = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> container.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;a&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;href&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                episodeLink = episodeLink.</span><span style="color:#DCDCAA;">replacingOccurrences</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">of</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;&#39;&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">with</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;</span><span style="color:#D7BA7D;">\\&#39;</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> !episodeLink.</span><span style="color:#9CDCFE;">isEmpty</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">                    collection.</span><span style="color:#DCDCAA;">append</span><span style="color:#D4D4D4;">(.</span><span style="color:#569CD6;">init</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#DCDCAA;">identifier</span><span style="color:#D4D4D4;">: episodeLink,</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#DCDCAA;">name</span><span style="color:#D4D4D4;">: episodeName,</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#DCDCAA;">server</span><span style="color:#D4D4D4;">: NASourceAnimeSaturn.</span><span style="color:#9CDCFE;">AnimeSaturnStream</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#DCDCAA;">parent</span><span style="color:#D4D4D4;">: reconstructedAnimeLink</span></span>
<span class="line"><span style="color:#D4D4D4;">                        ))</span></span>
<span class="line"><span style="color:#D4D4D4;">                }</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// Information</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> alias = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;div.box-trasparente-alternativo.rounded&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">first</span><span style="color:#D4D4D4;">()?.</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> animeSynopsis = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;#shown-trama&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// var additionalAttributes = [Anime.AttributeKey: Any]()</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#6A9955;">// Attributes</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> additionalAttributes = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> bowl.</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;div.container.shadow.rounded.bg-dark-as-box.mb-3.p-3.w-100.text-white&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">reduce</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">into</span><span style="color:#D4D4D4;">: [Anime.</span><span style="color:#9CDCFE;">AttributeKey</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Any</span><span style="color:#D4D4D4;">]()) { attributes, entry </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> info = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> entry.</span><span style="color:#DCDCAA;">html</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">components</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">separatedBy</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;&lt;br&gt;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> elem </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> info {</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> elem.</span><span style="color:#DCDCAA;">contains</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;b&gt;Voto:&lt;/b&gt; &quot;</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> rat = elem.</span><span style="color:#DCDCAA;">components</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">separatedBy</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;&lt;b&gt;Voto:&lt;/b&gt; &quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                        rat = rat[</span><span style="color:#DCDCAA;">safe</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]?.</span><span style="color:#DCDCAA;">components</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">separatedBy</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;/&quot;</span><span style="color:#D4D4D4;">) ?? []</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> rating = ((rat[</span><span style="color:#DCDCAA;">safe</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] ?? </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">) as NSString).</span><span style="color:#9CDCFE;">floatValue</span></span>
<span class="line"><span style="color:#D4D4D4;">                        attributes[.</span><span style="color:#9CDCFE;">rating</span><span style="color:#D4D4D4;">] = rating</span></span>
<span class="line"><span style="color:#D4D4D4;">                        attributes[.</span><span style="color:#9CDCFE;">ratingScale</span><span style="color:#D4D4D4;">] = </span><span style="color:#4EC9B0;">Float</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5.0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                    }</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> elem.</span><span style="color:#DCDCAA;">contains</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;b&gt;Data di uscita:&lt;/b&gt; &quot;</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> rat = elem.</span><span style="color:#DCDCAA;">components</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">separatedBy</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;&lt;b&gt;Data di uscita:&lt;/b&gt; &quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> airdate = rat[</span><span style="color:#DCDCAA;">safe</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">                        attributes[.</span><span style="color:#9CDCFE;">airDate</span><span style="color:#D4D4D4;">] = airdate</span></span>
<span class="line"><span style="color:#D4D4D4;">                    }</span></span>
<span class="line"><span style="color:#D4D4D4;">                }</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Anime</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                reconstructedAnimeLink,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">alias</span><span style="color:#D4D4D4;">: alias ?? animeTitle,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">additionalAttributes</span><span style="color:#D4D4D4;">: additionalAttributes,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">description</span><span style="color:#D4D4D4;">: animeSynopsis,</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">on</span><span style="color:#D4D4D4;">: [ NASourceAnimeSaturn.</span><span style="color:#9CDCFE;">AnimeSaturnStream</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;AnimeSaturn&quot;</span><span style="color:#D4D4D4;"> ],</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">episodes</span><span style="color:#D4D4D4;">: [ NASourceAnimeSaturn.</span><span style="color:#9CDCFE;">AnimeSaturnStream</span><span style="color:#D4D4D4;">: episodes ],</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">episodesAttributes</span><span style="color:#D4D4D4;">: [:]</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><h2 id="episode" tabindex="-1"><a class="header-anchor" href="#episode" aria-hidden="true">#</a> <code>episode</code></h2><h3 id="method-signature-2" tabindex="-1"><a class="header-anchor" href="#method-signature-2" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">episode</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">link</span><span style="color:#D4D4D4;">: EpisodeLink, </span><span style="color:#DCDCAA;">with</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">anime</span><span style="color:#D4D4D4;">: Anime, </span><span style="color:#DCDCAA;">_</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">handler</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">@escaping</span><span style="color:#D4D4D4;"> NineAnimatorCallback&lt;Episode&gt;) -&gt; NineAnimatorAsyncTask?</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>link</code></td><td>EpisodeLink</td><td>The <code>EpisodeLink</code> information of an episode</td></tr><tr><td><code>with</code></td><td>Anime</td><td>The Anime object represents a collection of information about the <code>AnimeLink</code></td></tr><tr><td><code>handler</code></td><td>NineAnimatorCallback&lt;Episode&gt;</td><td>NineAnimatorCallback for Episode</td></tr></tbody></table><h3 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h3><p>The episode function return a <code>NineAnimatorAsyncTask</code>. In a source implementation, the function should return <a href="/contribution/source-development/function-reference#episode"><code>NineAnimatorPromise&lt;Episode&gt;</code></a>.</p><h3 id="example-implementation-2" tabindex="-1"><a class="header-anchor" href="#example-implementation-2" aria-hidden="true">#</a> Example Implementation</h3><div class="language-swift ext-swift line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">episode</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">link</span><span style="color:#D4D4D4;">: EpisodeLink, </span><span style="color:#DCDCAA;">with</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">anime</span><span style="color:#D4D4D4;">: Anime) -&gt; NineAnimatorPromise&lt;Episode&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">        requestManager.</span><span style="color:#DCDCAA;">request</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">: link.</span><span style="color:#9CDCFE;">identifier</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#9CDCFE;">responseBowl</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#9CDCFE;">then</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">                bowl </span><span style="color:#C586C0;">in</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> iFrameURL = </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">URL</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">string</span><span style="color:#D4D4D4;">: bowl</span></span>
<span class="line"><span style="color:#D4D4D4;">                    .</span><span style="color:#DCDCAA;">select</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;#iframe-to-load&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                    .</span><span style="color:#DCDCAA;">attr</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;src&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">                    .</span><span style="color:#DCDCAA;">tryUnwrap</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Episode</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                    link,</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#DCDCAA;">target</span><span style="color:#D4D4D4;">: iFrameURL,</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#DCDCAA;">parent</span><span style="color:#D4D4D4;">: anime</span></span>
<span class="line"><span style="color:#D4D4D4;">                )</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> <code>search</code></h2><h3 id="method-signature-3" tabindex="-1"><a class="header-anchor" href="#method-signature-3" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">search</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">keyword</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">) -&gt; ContentProvider</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>keyword</code></td><td>String</td><td>The search query</td></tr></tbody></table><h3 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h3><p>ContentProvider</p><h2 id="suggestprovider" tabindex="-1"><a class="header-anchor" href="#suggestprovider" aria-hidden="true">#</a> <code>suggestProvider</code></h2><h3 id="method-signature-4" tabindex="-1"><a class="header-anchor" href="#method-signature-4" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">suggestProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">episode</span><span style="color:#D4D4D4;">: Episode, </span><span style="color:#DCDCAA;">forServer</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">server</span><span style="color:#D4D4D4;">: Anime.ServerIdentifier, </span><span style="color:#DCDCAA;">withServerName</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">) -&gt; VideoProviderParser?</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>episode</code></td><td>Episode</td><td>The Episode object is a struct that wraps information of an anime episode</td></tr><tr><td><code>forServer</code></td><td>Anime.ServerIdentifier</td><td>An array of the Anime struct ServerIdentifier</td></tr><tr><td><code>withServerName</code></td><td>String</td><td>The server name selected</td></tr></tbody></table><h3 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h3><p>VideoProviderParser</p><h3 id="example-implementation-3" tabindex="-1"><a class="header-anchor" href="#example-implementation-3" aria-hidden="true">#</a> Example Implementation</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">suggestProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">episode</span><span style="color:#D4D4D4;">: Episode, </span><span style="color:#DCDCAA;">forServer</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">server</span><span style="color:#D4D4D4;">: Anime.ServerIdentifier, </span><span style="color:#DCDCAA;">withServerName</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">) -&gt; VideoProviderParser? {</span></span>
<span class="line"><span style="color:#D4D4D4;">    VideoProviderRegistry.</span><span style="color:#9CDCFE;">default</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">provider</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">for</span><span style="color:#D4D4D4;">: name)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="link" tabindex="-1"><a class="header-anchor" href="#link" aria-hidden="true">#</a> <code>link</code></h2><h3 id="method-signature-5" tabindex="-1"><a class="header-anchor" href="#method-signature-5" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">link</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">: URL, </span><span style="color:#DCDCAA;">_</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">handler</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">@escaping</span><span style="color:#D4D4D4;"> NineAnimatorCallback&lt;AnyLink&gt;) -&gt; NineAnimatorAsyncTask?</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>url</code></td><td>URL</td><td>The URL of the anime site</td></tr><tr><td><code>handler</code></td><td>NineAnimatorCallback&lt;AnyLink&gt;</td><td>NineAnimatorCallback for AnyLink</td></tr></tbody></table><h3 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h3><p>The link function return a <code>NineAnimatorAsyncTask</code>. In a source implementation, the function should return <code>NineAnimatorPromise&lt;AnyLink&gt;</code>.</p><h2 id="canhandle" tabindex="-1"><a class="header-anchor" href="#canhandle" aria-hidden="true">#</a> <code>canHandle</code></h2><h3 id="method-signature-6" tabindex="-1"><a class="header-anchor" href="#method-signature-6" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">canHandle</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">: URL) -&gt; </span><span style="color:#4EC9B0;">Bool</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>url</code></td><td>URL</td><td>NIL</td></tr></tbody></table><h3 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h3><p>Given a url, this function should return a <code>boolean</code> value. If the source supports translating contents, it should return true from the provided URL.</p><h2 id="recommendserver" tabindex="-1"><a class="header-anchor" href="#recommendserver" aria-hidden="true">#</a> <code>recommendServer</code></h2><p>Recommend a preferred server for the anime object</p><h3 id="method-signature-7" tabindex="-1"><a class="header-anchor" href="#method-signature-7" aria-hidden="true">#</a> Method signature</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">recommendServer</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">anime</span><span style="color:#D4D4D4;">: Anime) -&gt; Anime.ServerIdentifier?</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>for</code></td><td>Anime</td><td>The Anime object represents a collection of information about the <code>AnimeLink</code></td></tr></tbody></table><h3 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h3><p>Anime.ServerIdentifier</p><h3 id="example-implementation-4" tabindex="-1"><a class="header-anchor" href="#example-implementation-4" aria-hidden="true">#</a> Example Implementation</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">recommendServer</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">anime</span><span style="color:#D4D4D4;">: Anime) -&gt; Anime.ServerIdentifier? {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">recommendServers</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">for</span><span style="color:#D4D4D4;">: anime, </span><span style="color:#DCDCAA;">ofPurpose</span><span style="color:#D4D4D4;">: .</span><span style="color:#9CDCFE;">playback</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">first</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="recommendservers" tabindex="-1"><a class="header-anchor" href="#recommendservers" aria-hidden="true">#</a> <code>recommendServers</code></h2><h3 id="method-signature-8" tabindex="-1"><a class="header-anchor" href="#method-signature-8" aria-hidden="true">#</a> Method signature</h3><p>Recommend a list of servers (ordered from the best to the worst) for a particular purpose</p><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">recommendServers</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">anime</span><span style="color:#D4D4D4;">: Anime, </span><span style="color:#DCDCAA;">ofPurpose</span><span style="color:#D4D4D4;">: VideoProviderParser.Purpose) -&gt; [Anime.ServerIdentifier]</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>for</code></td><td>Anime</td><td>The Anime object represents a collection of information about the <code>AnimeLink</code></td></tr><tr><td><code>ofPurpose</code></td><td>VideoProviderParser.Purpose</td><td>The purpose of the selection of parser, streaming or downloading</td></tr></tbody></table><h3 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h3><p>This function should return an array of servers (ordered from the best to the worst). The return type is [Anime.ServerIdentifier].</p><h3 id="example-implementation-5" tabindex="-1"><a class="header-anchor" href="#example-implementation-5" aria-hidden="true">#</a> Example Implementation</h3><div class="language-swift ext-swift"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">func</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">recommendServers</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">anime</span><span style="color:#D4D4D4;">: Anime, </span><span style="color:#DCDCAA;">ofPurpose</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">purpose</span><span style="color:#D4D4D4;">: VideoProviderParserParsingPurpose) -&gt; [Anime.ServerIdentifier] {</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#CE9178;">&quot;server1&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;server2&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;server3&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;server4&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div>`,77);function h(A,b){const a=l("ExternalLinkIcon");return p(),o(t,null,[i,s("p",null,[y,s("a",d,[C,r(a)]),u]),m],64)}var E=e(c,[["render",h],["__file","function-definitions.html.vue"]]);export{E as default};
